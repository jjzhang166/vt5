// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "vtwidth.h"

/////////////////////////////////////////////////////////////////////////////
// CVTWidth

IMPLEMENT_DYNCREATE(CVTWidth, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CVTWidth properties

long CVTWidth::GetWidth()
{
	long result;
	GetProperty(0x8, VT_I4, (void*)&result);
	return result;
}

void CVTWidth::SetWidth(long propVal)
{
	SetProperty(0x8, VT_I4, propVal);
}

BOOL CVTWidth::GetChecked()
{
	BOOL result;
	GetProperty(0x9, VT_BOOL, (void*)&result);
	return result;
}

void CVTWidth::SetChecked(BOOL propVal)
{
	SetProperty(0x9, VT_BOOL, propVal);
}

long CVTWidth::GetMin()
{
	long result;
	GetProperty(0xa, VT_I4, (void*)&result);
	return result;
}

void CVTWidth::SetMin(long propVal)
{
	SetProperty(0xa, VT_I4, propVal);
}

long CVTWidth::GetMax()
{
	long result;
	GetProperty(0xb, VT_I4, (void*)&result);
	return result;
}

void CVTWidth::SetMax(long propVal)
{
	SetProperty(0xb, VT_I4, propVal);
}

BOOL CVTWidth::GetOrientation()
{
	BOOL result;
	GetProperty(0xc, VT_BOOL, (void*)&result);
	return result;
}

void CVTWidth::SetOrientation(BOOL propVal)
{
	SetProperty(0xc, VT_BOOL, propVal);
}

BOOL CVTWidth::GetVisible()
{
	BOOL result;
	GetProperty(0x1, VT_BOOL, (void*)&result);
	return result;
}

void CVTWidth::SetVisible(BOOL propVal)
{
	SetProperty(0x1, VT_BOOL, propVal);
}

unsigned long CVTWidth::GetColorText()
{
	unsigned long result;
	GetProperty(0x2, VT_I4, (void*)&result);
	return result;
}

void CVTWidth::SetColorText(unsigned long propVal)
{
	SetProperty(0x2, VT_I4, propVal);
}

unsigned long CVTWidth::GetColorTextHighlight()
{
	unsigned long result;
	GetProperty(0x3, VT_I4, (void*)&result);
	return result;
}

void CVTWidth::SetColorTextHighlight(unsigned long propVal)
{
	SetProperty(0x3, VT_I4, propVal);
}

unsigned long CVTWidth::GetColorSlider()
{
	unsigned long result;
	GetProperty(0x4, VT_I4, (void*)&result);
	return result;
}

void CVTWidth::SetColorSlider(unsigned long propVal)
{
	SetProperty(0x4, VT_I4, propVal);
}

unsigned long CVTWidth::GetColorSliderArrows()
{
	unsigned long result;
	GetProperty(0x5, VT_I4, (void*)&result);
	return result;
}

void CVTWidth::SetColorSliderArrows(unsigned long propVal)
{
	SetProperty(0x5, VT_I4, propVal);
}

unsigned long CVTWidth::GetColorTextScale()
{
	unsigned long result;
	GetProperty(0x6, VT_I4, (void*)&result);
	return result;
}

void CVTWidth::SetColorTextScale(unsigned long propVal)
{
	SetProperty(0x6, VT_I4, propVal);
}

unsigned long CVTWidth::GetColorSliderArrowsHighlight()
{
	unsigned long result;
	GetProperty(0x7, VT_I4, (void*)&result);
	return result;
}

void CVTWidth::SetColorSliderArrowsHighlight(unsigned long propVal)
{
	SetProperty(0x7, VT_I4, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CVTWidth operations
