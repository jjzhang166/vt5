// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CVTColorPicker wrapper class
#ifndef __VTColorPicker_H__
#define __VTColorPicker_H__

class CVTColorPicker : public CWnd
{
protected:
	DECLARE_DYNCREATE(CVTColorPicker)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xbc383bc9, 0x6fd1, 0x4ff7, { 0x82, 0xad, 0xb4, 0x5, 0x34, 0x1d, 0x5e, 0x60 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	long GetColor();
	void SetColor(long);
	BOOL GetLikeCombo();
	void SetLikeCombo(BOOL);
	BOOL GetBlackAndWhite();
	void SetBlackAndWhite(BOOL);
	BOOL GetBinary();
	void SetBinary(BOOL);
	void SetPaletteEntry(short index, long color);

// Operations
public:
	unsigned long GetBinaryColor(short index);
	void SetBinaryColor(short index, long Color);
	short GetActiveBinaryIndex();
	short GetBinaryColorsCount();
	void SetActiveBinaryIndex(short nIdx);
};

#endif