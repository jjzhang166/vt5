// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "vtcolorpicker.h"

/////////////////////////////////////////////////////////////////////////////
// CVTColorPicker

IMPLEMENT_DYNCREATE(CVTColorPicker, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CVTColorPicker properties

long CVTColorPicker::GetColor()
{
	long result;
	GetProperty(0x4, VT_I4, (void*)&result);
	return result;
}

void CVTColorPicker::SetColor(long propVal)
{
	SetProperty(0x4, VT_I4, propVal);
}

BOOL CVTColorPicker::GetLikeCombo()
{
	BOOL result;
	GetProperty(0x1, VT_BOOL, (void*)&result);
	return result;
}

void CVTColorPicker::SetLikeCombo(BOOL propVal)
{
	SetProperty(0x1, VT_BOOL, propVal);
}

BOOL CVTColorPicker::GetBlackAndWhite()
{
	BOOL result;
	GetProperty(0x2, VT_BOOL, (void*)&result);
	return result;
}

void CVTColorPicker::SetBlackAndWhite(BOOL propVal)
{
	SetProperty(0x2, VT_BOOL, propVal);
}

BOOL CVTColorPicker::GetBinary()
{
	BOOL result;
	GetProperty(0x3, VT_BOOL, (void*)&result);
	return result;
}

void CVTColorPicker::SetBinary(BOOL propVal)
{
	SetProperty(0x3, VT_BOOL, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CVTColorPicker operations

unsigned long CVTColorPicker::GetBinaryColor(short index)
{
	unsigned long result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		index);
	return result;
}

void CVTColorPicker::SetBinaryColor(short index, long Color)
{
	static BYTE parms[] =
		VTS_I2 VTS_I4;
	InvokeHelper(0x6, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 index, Color);
}

short CVTColorPicker::GetActiveBinaryIndex()
{
	short result;
	InvokeHelper(0x7, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

short CVTColorPicker::GetBinaryColorsCount()
{
	short result;
	InvokeHelper(0x8, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

void CVTColorPicker::SetActiveBinaryIndex(short nIdx)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x9, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nIdx);
}

void CVTColorPicker::SetPaletteEntry(short index, long color)
{
	static BYTE parms[] =
		VTS_I2 VTS_I4;
	InvokeHelper(14L, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 index, color);
}

