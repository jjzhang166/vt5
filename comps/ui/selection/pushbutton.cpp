// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "pushbutton.h"

// Dispatch interfaces referenced by this interface
#include "Font.h"

/////////////////////////////////////////////////////////////////////////////
// CPushButton

IMPLEMENT_DYNCREATE(CPushButton, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CPushButton properties

CString CPushButton::GetBmpFileName()
{
	CString result;
	GetProperty(0x1, VT_BSTR, (void*)&result);
	return result;
}

void CPushButton::SetBmpFileName(LPCTSTR propVal)
{
	SetProperty(0x1, VT_BSTR, propVal);
}

short CPushButton::GetButtonWidth()
{
	short result;
	GetProperty(0x2, VT_I2, (void*)&result);
	return result;
}

void CPushButton::SetButtonWidth(short propVal)
{
	SetProperty(0x2, VT_I2, propVal);
}

short CPushButton::GetButtonHeight()
{
	short result;
	GetProperty(0x3, VT_I2, (void*)&result);
	return result;
}

void CPushButton::SetButtonHeight(short propVal)
{
	SetProperty(0x3, VT_I2, propVal);
}

BOOL CPushButton::GetAutoSize()
{
	BOOL result;
	GetProperty(0x4, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetAutoSize(BOOL propVal)
{
	SetProperty(0x4, VT_BOOL, propVal);
}

short CPushButton::GetButtonDepth()
{
	short result;
	GetProperty(0x5, VT_I2, (void*)&result);
	return result;
}

void CPushButton::SetButtonDepth(short propVal)
{
	SetProperty(0x5, VT_I2, propVal);
}

BOOL CPushButton::GetDrawBorder()
{
	BOOL result;
	GetProperty(0x6, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetDrawBorder(BOOL propVal)
{
	SetProperty(0x6, VT_BOOL, propVal);
}

BOOL CPushButton::GetFlatButton()
{
	BOOL result;
	GetProperty(0x7, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetFlatButton(BOOL propVal)
{
	SetProperty(0x7, VT_BOOL, propVal);
}

BOOL CPushButton::GetDefaultButton()
{
	BOOL result;
	GetProperty(0x8, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetDefaultButton(BOOL propVal)
{
	SetProperty(0x8, VT_BOOL, propVal);
}

BOOL CPushButton::GetThreeStateButton()
{
	BOOL result;
	GetProperty(0x9, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetThreeStateButton(BOOL propVal)
{
	SetProperty(0x9, VT_BOOL, propVal);
}

BOOL CPushButton::GetMouseInPicColor()
{
	BOOL result;
	GetProperty(0xa, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetMouseInPicColor(BOOL propVal)
{
	SetProperty(0xa, VT_BOOL, propVal);
}

BOOL CPushButton::GetMouseOutPicColor()
{
	BOOL result;
	GetProperty(0xb, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetMouseOutPicColor(BOOL propVal)
{
	SetProperty(0xb, VT_BOOL, propVal);
}

BOOL CPushButton::GetMouseOutShadow()
{
	BOOL result;
	GetProperty(0xc, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetMouseOutShadow(BOOL propVal)
{
	SetProperty(0xc, VT_BOOL, propVal);
}

BOOL CPushButton::GetButtonPressedPicColor()
{
	BOOL result;
	GetProperty(0xd, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetButtonPressedPicColor(BOOL propVal)
{
	SetProperty(0xd, VT_BOOL, propVal);
}

BOOL CPushButton::GetButtonPressedShadow()
{
	BOOL result;
	GetProperty(0xe, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetButtonPressedShadow(BOOL propVal)
{
	SetProperty(0xe, VT_BOOL, propVal);
}

BOOL CPushButton::GetMouseInShadow()
{
	BOOL result;
	GetProperty(0xf, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetMouseInShadow(BOOL propVal)
{
	SetProperty(0xf, VT_BOOL, propVal);
}

BOOL CPushButton::GetDisabled()
{
	BOOL result;
	GetProperty(0x26, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetDisabled(BOOL propVal)
{
	SetProperty(0x26, VT_BOOL, propVal);
}

BOOL CPushButton::GetDrawFocusRect()
{
	BOOL result;
	GetProperty(0x10, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetDrawFocusRect(BOOL propVal)
{
	SetProperty(0x10, VT_BOOL, propVal);
}

BOOL CPushButton::GetStretch()
{
	BOOL result;
	GetProperty(0x11, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetStretch(BOOL propVal)
{
	SetProperty(0x11, VT_BOOL, propVal);
}

CString CPushButton::GetButtonText()
{
	CString result;
	GetProperty(0x12, VT_BSTR, (void*)&result);
	return result;
}

void CPushButton::SetButtonText(LPCTSTR propVal)
{
	SetProperty(0x12, VT_BSTR, propVal);
}

short CPushButton::GetTextAlign()
{
	short result;
	GetProperty(0x13, VT_I2, (void*)&result);
	return result;
}

void CPushButton::SetTextAlign(short propVal)
{
	SetProperty(0x13, VT_I2, propVal);
}

short CPushButton::GetOffsetTextFromBMP()
{
	short result;
	GetProperty(0x14, VT_I2, (void*)&result);
	return result;
}

void CPushButton::SetOffsetTextFromBMP(short propVal)
{
	SetProperty(0x14, VT_I2, propVal);
}

BOOL CPushButton::GetDrawFigures()
{
	BOOL result;
	GetProperty(0x15, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetDrawFigures(BOOL propVal)
{
	SetProperty(0x15, VT_BOOL, propVal);
}

short CPushButton::GetFigureType()
{
	short result;
	GetProperty(0x16, VT_I2, (void*)&result);
	return result;
}

void CPushButton::SetFigureType(short propVal)
{
	SetProperty(0x16, VT_I2, propVal);
}

short CPushButton::GetFigureSize()
{
	short result;
	GetProperty(0x17, VT_I2, (void*)&result);
	return result;
}

void CPushButton::SetFigureSize(short propVal)
{
	SetProperty(0x17, VT_I2, propVal);
}

unsigned long CPushButton::GetColorTransparent()
{
	unsigned long result;
	GetProperty(0x18, VT_I4, (void*)&result);
	return result;
}

void CPushButton::SetColorTransparent(unsigned long propVal)
{
	SetProperty(0x18, VT_I4, propVal);
}

unsigned long CPushButton::GetColorFigure()
{
	unsigned long result;
	GetProperty(0x19, VT_I4, (void*)&result);
	return result;
}

void CPushButton::SetColorFigure(unsigned long propVal)
{
	SetProperty(0x19, VT_I4, propVal);
}

unsigned long CPushButton::GetColorFillFigure()
{
	unsigned long result;
	GetProperty(0x1a, VT_I4, (void*)&result);
	return result;
}

void CPushButton::SetColorFillFigure(unsigned long propVal)
{
	SetProperty(0x1a, VT_I4, propVal);
}

BOOL CPushButton::GetFillFigure()
{
	BOOL result;
	GetProperty(0x1b, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetFillFigure(BOOL propVal)
{
	SetProperty(0x1b, VT_BOOL, propVal);
}

COleFont CPushButton::GetFont()
{
	LPDISPATCH pDispatch;
	GetProperty(DISPID_FONT, VT_DISPATCH, (void*)&pDispatch);
	return COleFont(pDispatch);
}

void CPushButton::SetFont(LPDISPATCH propVal)
{
	SetProperty(DISPID_FONT, VT_DISPATCH, propVal);
}

unsigned long CPushButton::GetActiveTextColor()
{
	unsigned long result;
	GetProperty(0x1c, VT_I4, (void*)&result);
	return result;
}

void CPushButton::SetActiveTextColor(unsigned long propVal)
{
	SetProperty(0x1c, VT_I4, propVal);
}

unsigned long CPushButton::GetInactiveTextColor()
{
	unsigned long result;
	GetProperty(0x1d, VT_I4, (void*)&result);
	return result;
}

void CPushButton::SetInactiveTextColor(unsigned long propVal)
{
	SetProperty(0x1d, VT_I4, propVal);
}

BOOL CPushButton::GetInnerRaised()
{
	BOOL result;
	GetProperty(0x1e, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetInnerRaised(BOOL propVal)
{
	SetProperty(0x1e, VT_BOOL, propVal);
}

BOOL CPushButton::GetInnerSunken()
{
	BOOL result;
	GetProperty(0x1f, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetInnerSunken(BOOL propVal)
{
	SetProperty(0x1f, VT_BOOL, propVal);
}

BOOL CPushButton::GetOuterRaised()
{
	BOOL result;
	GetProperty(0x20, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetOuterRaised(BOOL propVal)
{
	SetProperty(0x20, VT_BOOL, propVal);
}

BOOL CPushButton::GetOuterSunken()
{
	BOOL result;
	GetProperty(0x21, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetOuterSunken(BOOL propVal)
{
	SetProperty(0x21, VT_BOOL, propVal);
}

short CPushButton::GetFigureMaxSize()
{
	short result;
	GetProperty(0x22, VT_I2, (void*)&result);
	return result;
}

void CPushButton::SetFigureMaxSize(short propVal)
{
	SetProperty(0x22, VT_I2, propVal);
}

short CPushButton::GetFigureBound()
{
	short result;
	GetProperty(0x23, VT_I2, (void*)&result);
	return result;
}

void CPushButton::SetFigureBound(short propVal)
{
	SetProperty(0x23, VT_I2, propVal);
}

BOOL CPushButton::GetAdvancedShadow()
{
	BOOL result;
	GetProperty(0x24, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetAdvancedShadow(BOOL propVal)
{
	SetProperty(0x24, VT_BOOL, propVal);
}

BOOL CPushButton::GetDarkShadow()
{
	BOOL result;
	GetProperty(0x25, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetDarkShadow(BOOL propVal)
{
	SetProperty(0x25, VT_BOOL, propVal);
}

CString CPushButton::GetActionName()
{
	CString result;
	GetProperty(0x2c, VT_BSTR, (void*)&result);
	return result;
}

void CPushButton::SetActionName(LPCTSTR propVal)
{
	SetProperty(0x2c, VT_BSTR, propVal);
}

BOOL CPushButton::GetRunAction()
{
	BOOL result;
	GetProperty(0x2d, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetRunAction(BOOL propVal)
{
	SetProperty(0x2d, VT_BOOL, propVal);
}

BOOL CPushButton::GetAutoRepeat()
{
	BOOL result;
	GetProperty(0x2e, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetAutoRepeat(BOOL propVal)
{
	SetProperty(0x2e, VT_BOOL, propVal);
}

BOOL CPushButton::GetVisible()
{
	BOOL result;
	GetProperty(0x2f, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetVisible(BOOL propVal)
{
	SetProperty(0x2f, VT_BOOL, propVal);
}

BOOL CPushButton::GetDrawFocusedRect()
{
	BOOL result;
	GetProperty(0x31, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetDrawFocusedRect(BOOL propVal)
{
	SetProperty(0x31, VT_BOOL, propVal);
}

BOOL CPushButton::GetSemiFlat()
{
	BOOL result;
	GetProperty(0x32, VT_BOOL, (void*)&result);
	return result;
}

void CPushButton::SetSemiFlat(BOOL propVal)
{
	SetProperty(0x32, VT_BOOL, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CPushButton operations

BOOL CPushButton::ResetPressedState()
{
	BOOL result;
	InvokeHelper(0x27, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CPushButton::SetPressedState()
{
	BOOL result;
	InvokeHelper(0x28, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CPushButton::IsPressed()
{
	BOOL result;
	InvokeHelper(0x29, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CPushButton::SetAutoSize()
{
	BOOL result;
	InvokeHelper(0x2a, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CPushButton::ReloadBitmap()
{
	BOOL result;
	InvokeHelper(0x2b, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CPushButton::SetFocus()
{
	InvokeHelper(0x30, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CPushButton::CopyToClipboard()
{
	InvokeHelper(0x33, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CPushButton::PasteFromClipboard()
{
	InvokeHelper(0x34, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
